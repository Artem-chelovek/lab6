def shell_sort(arr):
    """
    Реализует алгоритм сортировки Шелла (Shell Sort).
    """
    n = len(arr)                        # Получаем длину массива
    gap = n // 2                        # Первоначально устанавливаем шаг (gap) равным половине длины массива
    
    # Цикл, уменьшающий шаг (gap) на каждой итерации
    while gap > 0:
        # Просматриваем массив с шагом gap
        for i in range(gap, n):
            temp = arr[i]               # Запоминаем текущий элемент
            j = i                       # Устанавливаем указатель j на текущий индекс
            
            # Проверяем и переносим элементы на позиции
            while j >= gap and arr[j-gap] > temp:
                arr[j] = arr[j-gap]    # Сдвигаем элемент вправо
                j -= gap                # Перемещаемся назад по массиву с шагом gap
            
            arr[j] = temp               # Вставляем текущий элемент на его новое место
        
        # Уменьшаем шаг gap в 2 раза на следующей итерации
        gap //= 2

# Пример использования
if __name__ == "__main__":
    sample_data = [64, 34, 25, 12, 22, 11, 90]
    print("Исходный массив:", sample_data)
    
    shell_sort(sample_data)             # Вызываем функцию сортировки
    
    print("Отсортированный массив:", sample_data)
'''
Исходный массив: [64, 34, 25, 12, 22, 11, 90]
Отсортированный массив: [11, 12, 22, 25, 34, 64, 90]
'''